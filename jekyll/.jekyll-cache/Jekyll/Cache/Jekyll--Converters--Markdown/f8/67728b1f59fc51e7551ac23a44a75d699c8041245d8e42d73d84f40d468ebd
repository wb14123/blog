I"Ñ
<p>While building Scala projects, we usually use a proxy to make the build faster. On the other hand, we usually use another repository to host our internal dependencies, which usually has a password to protect it from unwanted access. Both things are good and necessary. But if you want to use both of them, you will find itâ€™s very tricky.</p>

<h2 id="use-proxy-repositories">Use Proxy Repositories</h2>

<p>sbt has a <a href="http://www.scala-sbt.org/0.13/docs/Proxy-Repositories.html">document</a> that described how to set proxy repositories:</p>

<h3 id="config-repositories-in-sbtrepositories-like-this">Config repositories in <code>~/.sbt/repositories</code> like this:</h3>

<pre><code>[repositories]
  local
    my-ivy-proxy-releases: http://repo.company.com/ivy-releases/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]
    my-maven-proxy-releases: http://repo.company.com/maven-releases/
</code></pre>

<h3 id="add--dsbtoverridebuildrepostrue-while-use-sbt-command">Add <code>-Dsbt.override.build.repos=true</code> while use sbt command.</h3>

<p>The second step will override all the resolvers defined in your project, like in the file <code>build.sbt</code>. It is necessary because if you donâ€™t do this, sbt will still send requests to default repos like typesafe and scala-sbt.</p>

<h2 id="use-self-hosted-repositories">Use Self Hosted Repositories</h2>

<p>sbt has a <a href="http://www.scala-sbt.org/0.13/docs/Resolvers.html">document</a> about this, too. You will add something like this in your <code>build.sbt</code>:</p>

<pre><code>resolvers +=
  "Sonatype OSS Snapshots" at "https://oss.sonatype.org/content/repositories/snapshots"
</code></pre>

<p>And if you have a password for this repo, you should also add something like this:</p>

<pre><code>credentials += Credentials("Sonatype Nexus Repository Manager", "oss.sonatype.org",
  "username", "password")
</code></pre>

<h2 id="use-both">Use Both</h2>

<p>You may see the problem to use both of them. In order to force sbt to use proxy repos, you should use the option <code>-Dsbt.override.build.repos=true</code>, which will override your self hosted repo written in <code>build.sbt</code>.</p>

<p>After tried some methods, I find I can just write the repos defined in <code>build.sbt</code> into <code>~/.sbt/repositories</code>, and sbt will still be able to find the credentials for it while building the project.</p>

<p>This method will make sbt print some error logs while loading the project: sbt will attempt to download some dependencies from this repo but cannot find the credential since it hasnâ€™t loaded the project yet. If you are comfortable to ignore the error log, this method would be fine.</p>
:ET